1. Что такое Redis?
   Redis (Remote Dictionary Server) — это высокопроизводительная NoSQL-база данных типа "ключ-значение"
   с поддержкой различных структур данных (строки, хеши, списки, множества).
   Основные особенности:

Работает в памяти (но может сохранять данные на диск).

Поддерживает TTL (время жизни ключей).

Обеспечивает репликацию и кластеризацию.

Используется для кэширования, очередей, сессий, реального времени.

# Вариант с Docker

docker run --name redis -d -p 6379:6379 redis
docker exec -it redis redis-cli Command line interface, CLI интерфейс командной строки

Основные команды:
Строки:

Для создания записи необходимо выполнить команду
set user:1 "Daniil", где user:1 - строковый ключ
Для чтения необходимо будет выполнить команду
get user:1
При попытке получить несуществующее значение, мы получим (nil)
get unknown
/============/
Про работу с объектами будет описано в соответсвующем скиле
/============/
Для работы с объектами есть свой ряд команд
Для записи необходимо выполнить команду
hset phone brand apple model X, где phone - ключ, а последующие значения будут представлять собой привычный объект
{brand: 'apple', model: 'X'}
Для получения свойств объекта необходимо выполнить команду
hget phone model, где model - это ключ, значение которого мы хотим получить
Для получения всех свойств объекта необходимо выполнить
hgetall phone

Думаю, не лишним будет тут упомянуть про массивы в redis.
Команды довольно схожи с js. Например, для добавления в конец массива какого-либо значения
необходимо выполнить команду
rpush myarr value, где myarr - целевой массив, а value - значение, которое будет в него добавлено
Есть аналогичная комнда lpush
Так же есть lpop для получения и удаления первого элемента массива.
Для поулчения длины массива можно выполнить команду llen, а для получения значений lrange 0 -1 (все элементы массива)

С более специфичными командами всегда можно ознакомиться в документации.
/============/
TTL (время жизни ключа):

bash
SET temp:data "123" EX 60 # Удалить через 60 сек
TTL temp:data # Проверить оставшееся время
